{"version":3,"sources":["components/Header.js","utility/functions.js","components/Loading.js","components/PokemonCard.js","components/PaginationButton.js","components/PokemonList.js","components/PokemonDetails.js","components/Footer.js","router/PokeRouter.js","App.js","index.js"],"names":["Header","className","capitalizeName","name","charAt","toUpperCase","slice","Loading","PokemonCard","pokemon","useState","frontSprite","setFrontSprite","backSprite","setBackSprite","isLoaded","setIsLoaded","useEffect","abortController","AbortController","a","fetch","response","json","data","sprites","front_default","back_default","console","log","getSprites","abort","src","alt","to","PaginationButton","direction","pageChange","onClick","PokemonList","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","next","previous","results","getPokemon","map","poke","PokemonDetails","props","match","params","Footer","Date","getFullYear","href","target","rel","PokeRouter","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cb3497c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h1 className='header__text'>PokeAPI w/ React Router</h1>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","export const capitalizeName = (name) => name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React from 'react';\r\n\r\nconst Loading = () => <p className='loading'>Loading...</p>;\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { capitalizeName } from './../utility/functions';\r\nimport Loading from './Loading';\r\n\r\nconst PokemonCard = ({ pokemon }) => {\r\n\tconst [frontSprite, setFrontSprite] = useState('');\r\n\tconst [backSprite, setBackSprite] = useState('');\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController();\r\n\r\n\t\tconst getSprites = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\tsetFrontSprite(data.sprites.front_default);\r\n\t\t\t\tsetBackSprite(data.sprites.back_default);\r\n\t\t\t\tsetIsLoaded(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tgetSprites();\r\n\r\n\t\treturn () => abortController.abort();\r\n\t}, [pokemon.name]);\r\n\r\n\tif (isLoaded) {\r\n\t\treturn (\r\n\t\t\t<li className='card'>\r\n\t\t\t\t<div className='card__sprite-row'>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName='card__sprite'\r\n\t\t\t\t\t\tsrc={frontSprite}\r\n\t\t\t\t\t\talt={`front facing sprite for ${pokemon.name}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName='card__sprite'\r\n\t\t\t\t\t\tsrc={backSprite}\r\n\t\t\t\t\t\talt={`back facing sprite for ${pokemon.name}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className='card__heading'>{capitalizeName(pokemon.name)}</h2>\r\n\t\t\t\t<Link className='card__button' to={`/pokemon/${pokemon.name}`}>\r\n\t\t\t\t\tView Details\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<li className='card'>\r\n\t\t\t\t<Loading />\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from 'react';\r\n\r\nconst PaginationButton = ({ direction, pageChange }) => (\r\n\t<i\r\n\t\tclassName={`pagination__icon pagination__icon--${direction} fas fa-chevron-${direction}`}\r\n\t\tonClick={pageChange}\r\n\t/>\r\n);\r\n\r\nexport default PaginationButton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonCard from './PokemonCard';\r\nimport Loading from './Loading';\r\nimport PaginationButton from './PaginationButton';\r\n\r\nconst PokemonList = () => {\r\n\t// state variables\r\n\tconst [pokemon, setPokemon] = useState([]);\r\n\tconst [isLoaded, setIsLoaded] = useState(false);\r\n\tconst [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon');\r\n\tconst [nextPageUrl, setNextPageUrl] = useState('');\r\n\tconst [prevPageUrl, setPrevPageUrl] = useState('');\r\n\r\n\t// make initial request - get first 20 pokemon\r\n\tuseEffect(() => {\r\n\t\t// AbortController allows us to cancel fetch requests\r\n\t\t// this is an alternative to using axios with its built in cancel functionality\r\n\t\tconst abortController = new AbortController();\r\n\r\n\t\tsetIsLoaded(false);\r\n\r\n\t\tconst getPokemon = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(currentPageUrl);\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\t// set various state values\r\n\t\t\t\tsetNextPageUrl(data.next);\r\n\t\t\t\tsetPrevPageUrl(data.previous);\r\n\t\t\t\tsetPokemon(data.results);\r\n\t\t\t\tsetIsLoaded(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// run the above function each time\r\n\t\tgetPokemon();\r\n\r\n\t\t// cleanup - prevent race conditions (cancel previous request each time we make a new one)\r\n\t\treturn () => abortController.abort();\r\n\t}, [currentPageUrl]);\r\n\r\n\t// handle going to next and previous pages\r\n\tconst gotoNextPage = () => setCurrentPageUrl(nextPageUrl);\r\n\tconst gotoPrevPage = () => setCurrentPageUrl(prevPageUrl);\r\n\r\n\tif (isLoaded) {\r\n\t\treturn (\r\n\t\t\t<div className='pokemon'>\r\n\t\t\t\t<ul className='pokemon__list'>\r\n\t\t\t\t\t{pokemon.map((poke) => (\r\n\t\t\t\t\t\t<PokemonCard key={poke.name} pokemon={poke} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t{prevPageUrl && (\r\n\t\t\t\t\t<PaginationButton direction='left' pageChange={prevPageUrl ? gotoPrevPage : null} />\r\n\t\t\t\t)}\r\n\t\t\t\t{nextPageUrl && (\r\n\t\t\t\t\t<PaginationButton direction='right' pageChange={nextPageUrl ? gotoNextPage : null} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <Loading />;\r\n\t}\r\n};\r\n\r\nexport default PokemonList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { capitalizeName } from './../utility/functions';\r\n\r\nconst PokemonDetails = (props) => {\r\n\tconsole.log(props);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Link to='/'>Go back</Link>\r\n\t\t\t<p>Welcome to PokemonDetails page for {capitalizeName(props.match.params.name)}!</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\tconst gitHubLink = 'https://github.com/andrews1022/pokeapi-react-router';\r\n\tconst twitterLink = 'https://twitter.com/andrew_devsrc';\r\n\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<p className='footer__text'>\r\n\t\t\t\tÂ© {new Date().getFullYear()} all rights reserved. designed and built and andrew shearer\r\n\t\t\t</p>\r\n\t\t\t<div className='footer__icon-row'>\r\n\t\t\t\t<a href={gitHubLink} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<i className='footer__icon fab fa-github'></i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href={twitterLink} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<i className='footer__icon fab fa-twitter'></i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Header from './../components/Header';\r\nimport PokemonList from './../components/PokemonList';\r\nimport PokemonDetails from './../components/PokemonDetails';\r\nimport Footer from './../components/Footer';\r\n\r\nconst PokeRouter = () => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Header />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/' component={PokemonList} />\r\n\t\t\t\t<Route path='/pokemon/:name' component={PokemonDetails} />\r\n\t\t\t</Switch>\r\n\t\t\t<Footer />\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default PokeRouter;\r\n","import React from 'react';\nimport PokeRouter from './router/PokeRouter';\nimport './styles/app.min.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className='app'>\n\t\t\t<PokeRouter />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}